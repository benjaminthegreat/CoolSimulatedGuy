;
; File generated by cc65 v 2.16 - Git 9ca004e
;
	.fopt		compiler,"cc65 v 2.16 - Git 9ca004e"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_index
	.export		_STORY_BRIEFING
	.export		_PALETTE
	.export		_main

.segment	"RODATA"

_STORY_BRIEFING:
	.byte	$47,$61,$79,$20,$69,$64,$69,$6F,$74,$20,$72,$65,$76,$65,$61,$6C
	.byte	$73,$20,$68,$69,$73,$20,$32,$30,$30,$20,$49,$51,$20,$73,$65,$63
	.byte	$72,$65,$74,$20,$6C,$69,$76,$65,$20,$6F,$6E,$20,$63,$61,$6D,$65
	.byte	$72,$61,$20,$77,$69,$74,$68,$20,$31,$32,$30,$30,$6B,$20,$70,$65
	.byte	$6F,$70,$6C,$65,$20,$77,$61,$74,$63,$68,$69,$6E,$67,$00
_PALETTE:
	.byte	$1F
	.byte	$00
	.byte	$10
	.byte	$20

.segment	"BSS"

_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

;
; PPU_CTRL = 0;
;
	lda     #$00
	sta     $2000
;
; PPU_MASK = 0;
;
	sta     $2001
;
; PPU_ADDRESS = 0x3f; //now you have an address in your PP unit
;
	lda     #$3F
	sta     $2006
;
; PPU_ADDRESS = 0x00; //tbh my iq isn't high enough to know why these do anything
;
	lda     #$00
	sta     $2006
;
; for(index = 0; index < sizeof(PALETTE); ++index) {
;
	sta     _index
L004C:	lda     _index
	cmp     #$04
	bcs     L004D
;
; PPU_DATA = PALETTE[index];
;
	ldy     _index
	lda     _PALETTE,y
	sta     $2007
;
; for(index = 0; index < sizeof(PALETTE); ++index) {
;
	inc     _index
	jmp     L004C
;
; PPU_ADDRESS = 0x21; //little endian again
;
L004D:	lda     #$21
	sta     $2006
;
; PPU_ADDRESS = 0xca; //we finna put it at the middle of the screen
;
	lda     #$CA
	sta     $2006
;
; for(index = 0; index < sizeof(STORY_BRIEFING); ++index) {
;
	lda     #$00
	sta     _index
L004E:	lda     _index
	cmp     #$4E
	bcs     L004F
;
; PPU_DATA = STORY_BRIEFING[index];
;
	ldy     _index
	lda     _STORY_BRIEFING,y
	sta     $2007
;
; for(index = 0; index < sizeof(STORY_BRIEFING); ++index) {
;
	inc     _index
	jmp     L004E
;
; PPU_ADDRESS = 0;
;
L004F:	lda     #$00
	sta     $2006
;
; PPU_ADDRESS = 0;
;
	sta     $2006
;
; SCROLL = 0;
;
	sta     $2005
;
; SCROLL = 0;
;
	sta     $2005
;
; PPU_CTRL = 0x90;
;
	lda     #$90
	sta     $2000
;
; PPU_MASK = 0x1e;
;
	lda     #$1E
	sta     $2001
;
; while(1);
;
L004B:	jmp     L004B

.endproc

